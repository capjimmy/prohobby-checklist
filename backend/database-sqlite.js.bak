const Database = require('better-sqlite3');
const path = require('path');

const db = new Database(path.join(__dirname, 'checklist.db'));

// 데이터베이스 초기화
function initDatabase() {
  // 사용자 테이블
  db.exec(`
    CREATE TABLE IF NOT EXISTS users (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      name TEXT NOT NULL,
      phone TEXT UNIQUE NOT NULL,
      birthdate TEXT NOT NULL,
      password TEXT NOT NULL,
      is_admin INTEGER DEFAULT 0,
      created_at TEXT DEFAULT CURRENT_TIMESTAMP
    )
  `);

  // 작업 테이블
  db.exec(`
    CREATE TABLE IF NOT EXISTS tasks (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      title TEXT NOT NULL,
      description TEXT,
      priority TEXT NOT NULL,
      status TEXT DEFAULT 'in_progress',
      creator_id INTEGER NOT NULL,
      completer_id INTEGER,
      created_date TEXT DEFAULT CURRENT_TIMESTAMP,
      deadline_date TEXT NOT NULL,
      completed_date TEXT,
      FOREIGN KEY (creator_id) REFERENCES users(id),
      FOREIGN KEY (completer_id) REFERENCES users(id)
    )
  `);

  // 작업자 테이블 (다대다 관계)
  db.exec(`
    CREATE TABLE IF NOT EXISTS task_workers (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      task_id INTEGER NOT NULL,
      worker_id INTEGER NOT NULL,
      FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
      FOREIGN KEY (worker_id) REFERENCES users(id),
      UNIQUE(task_id, worker_id)
    )
  `);

  // 알림 테이블
  db.exec(`
    CREATE TABLE IF NOT EXISTS notifications (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      user_id INTEGER NOT NULL,
      task_id INTEGER NOT NULL,
      type TEXT NOT NULL,
      message TEXT NOT NULL,
      is_read INTEGER DEFAULT 0,
      created_at TEXT DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (user_id) REFERENCES users(id),
      FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE
    )
  `);

  console.log('Database initialized successfully');
}

module.exports = { db, initDatabase };
